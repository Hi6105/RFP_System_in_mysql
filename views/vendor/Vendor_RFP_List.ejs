<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" type="text/css" href="/styles.css" />
  <title>Document</title>
  <style>
    #adminLayout {
      display: flex;
      flex-direction: row;
    }

    html,
    body {
      height: 100%;
      margin: 0;
      padding: 0;
    }

    #full {
      display: flex;
      flex-direction: row;
    }

    #welcome {
      margin-left: auto;
    }

    #content {
      flex: 1;
    }

    #Logout {
      margin-left: 1%;
    }

    #nav {
      display: flex;
      flex-direction: row;
      align-items: center;
    }

    #home {
      margin-left: auto;
    }

    #action {
      font-style: italic;
      cursor: pointer;
    }

    #categories {
      padding: 1%;
    }

    #categoriesFields {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
    }

    #allData {
      padding: 5%;
      display: flex;
      flex-direction: column;
    }

    #categoryBox {
      display: flex;
      flex-direction: row;
    }

    #addCategory {
      margin-left: auto;
    }

    #dis {
      margin-bottom: 2%;
    }

    #logout {
      text-decoration: none;
      color: blue;
      margin-left: 1%;
    }
  </style>
</head>

<body>
  <div id="full">
    <div id="sideBar"><%- include('../layouts/vendorLayout') %></div>
    <div id="content">
      <div id="topNav">
        <span id="welcome">Welcome <%= userType %></span>
        <a onclick="logout()" id="logout">Logout</a>
      </div>
      <div id="afterNav">
        <div id="nav">
          <h3>RFP List</h3>
          <span id="home">Home / RFP List</span>
        </div>
        <div id="dis">
          <div id="categoryBox">
            <span>RFP</span>
          </div>
          <div id="allData">
            <table>
              <thead>
                <tr>
                  <th>RFP No.</th>
                  <th>Item Name</th>
                  <th>Last Date</th>
                  <th>Min Price</th>
                  <th>Max Price</th>
                  <th>Status</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody>
                <% Vendor_RFP_List.forEach(rfp => { %>
                <tr>
                  <td><%= rfp.rfp_no %></td>
                  <td><%= rfp.item_name %></td>
                  <td><%= rfp.last_date.toDateString() %></td>
                  <td><%= rfp.min_price %></td>
                  <td><%= rfp.max_price %></td>
                  <td>
                    <span class="badge" style="background-color: <%= rfp.status === 'OPEN' ? '#65b741' : 'red' %>"><%= rfp.status %></span>
                  </td>
                  <td>
                    <% if (!rfp.applied) { %>
                    <span onclick="applyForRFP('<%= rfp.rfp_no %>')" id="action" style="color: #65b741">
                      Apply
                    </span>
                    <% } %>
                  </td>
                </tr>
                <% }); %>
              </tbody>
            </table>
            <div id="pagination">
              <% if (page > 1) { %>
              <div class="prevNext">
                <a class="paginationElement" href="/vendor_RFP_List?page=<%= page - 1 %>">Previous</a>
              </div>
              <% } %>
              <span>Page <%= page %> of <%= totalPages %></span>
              <% if (page < totalPages) { %>
              <div class="prevNext">
                <a class="paginationElement" href="/vendorRFP_List?page=<%= page + 1 %>">Next</a>
              </div>
              <% } %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script>
    function applyForRFP(rfpNo) {
      fetch("/applyRFP", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          // Optionally, include data in the request body
          body: JSON.stringify({
            rfpNo: rfpNo
          }),
        })
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
          return response.text(); // Return response text
        })
        .then((data) => {
          console.log("Response:", data);
          window.location.href = "/createQuote";
        })
        .catch((error) => {
          console.error("Error:", error); // Handle errors
        });
    }

    function logout() {
      const options = {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
      };

      fetch("/logout", options)
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
        })
        .then((data) => {
          window.location.href = "/login";
        })
        .catch((error) => {
          console.error("Error:", error); // Handle errors
        });
    }
  </script>
</body>

</html>