<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" type="text/css" href="/styles.css" />
  <title>Document</title>
  <style>
    #adminLayout {
      display: flex;
      flex-direction: row;
    }

    html,
    body {
      height: 100%;
      margin: 0;
      padding: 0;
    }

    #full {
      display: flex;
      flex-direction: row;
    }

    #welcome {
      margin-left: auto;
    }

    #content {
      flex: 1;
    }

    #Logout {
      margin-left: 1%;
    }

    #nav {
      display: flex;
      flex-direction: row;
      align-items: center;
    }

    #home {
      margin-left: auto;
    }

    #vendors {
      padding: 1%;
    }

    #vendorFields {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      margin-left: 5%;
      margin-right: 5%;
      margin-top: 5%;
      margin-bottom: 1%;
    }

    #logout {
      text-decoration: none;
      color: blue;
      margin-left: 1%;
    }
  </style>
</head>

<body>
  <div id="full">
    <div id="sideBar"><%- include('../layouts/vendorLayout') %></div>
    <div id="content">
      <div id="topNav">
        <span id="welcome">Welcome <%= userType %></span>
        <a onclick="logout()" id="logout">Logout</a>
      </div>
      <div id="afterNav">
        <div id="nav">
          <h3>RFP Create</h3>
          <span id="home">Home / RFP / quote Create</span>
        </div>
        <div id="dis">
          <div class="form-container">
            <form id="formFields">
              <label for="vendorPrice">Vendor Price</label><br />
              <input type="text" id="vendorPrice" name="vendorPrice" required />
              <div class="errors" id="vendorPriceError"></div>
              <label for="itemDescription">Item Description</label><br />
              <input type="text" id="itemDescription" name="itemDescription" required />
              <div class="errors" id="itemDescriptionError"></div>

              <label for="quantity">Quantity:</label><br />
              <input type="number" id="quantity" name="quantity" required />
              <div class="errors" id="quantityError"></div>

              <label for="totalCost">Total Cost:</label><br />
              <input type="number" id="totalCost" name="totalCost" required />
              <div class="errors" id="totalCostError"></div>

              <button type="button" onclick="redirect()">Submit</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script>
    function redirect() {
      const vendorPrice = document.getElementById("vendorPrice").value;
      const itemDescription =
        document.getElementById("itemDescription").value;
      const quantity = document.getElementById("quantity").value;
      const totalCost = document.getElementById("totalCost").value;

      let errors = 0;
      document.getElementById("vendorPriceError").innerHTML = "";
      document.getElementById("itemDescriptionError").innerHTML = "";
      document.getElementById("quantityError").innerHTML = "";
      document.getElementById("totalCostError").innerHTML = "";

      if (vendorPrice == "") {
        document.getElementById("vendorPriceError").innerHTML =
          "*Please enter the price";
        errors += 1;
      }
      if (itemDescription == "") {
        document.getElementById("itemDescriptionError").innerHTML =
          "*Please enter the item description";
        errors += 1;
      }
      if (quantity == "") {
        document.getElementById("quantityError").innerHTML =
          "*Please enter the quantity";
        errors += 1;
      }
      if (totalCost == "") {
        document.getElementById("totalCostError").innerHTML =
          "*Please enter the total cost";
        errors += 1;
      }

      if (errors > 0) return false;

      const data = {
        quantity: quantity,
        vendorPrice: vendorPrice,
        itemDescription: itemDescription,
        totalCost: totalCost,
      };

      // Options for the fetch() request
      const options = {
        method: "POST",
        headers: {
          "Content-Type": "application/json", // Specify the content type as JSON
        },
        body: JSON.stringify(data), // Convert data to JSON format
      };

      // Make the POST request
      fetch("/addQuote", options)
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
          return response.json(); // Parse response JSON
        })
        .then((data) => {
          console.log("Response:", data.message); // Handle response data
          window.location.href = "/Vendor_RFP_List";
        })
        .catch((error) => {
          console.error("Error:", error); // Handle errors
        });
    }

    function logout() {
      const options = {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
      };

      fetch("/logout", options)
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
        })
        .then((data) => {
          window.location.href = "/login";
        })
        .catch((error) => {
          console.error("Error:", error); // Handle errors
        });
    }
  </script>
</body>

</html>